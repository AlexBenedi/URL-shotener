name: CI
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:

    # Prepare
      - uses: actions/checkout@v2
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'
        
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@e6e38bacfdf1a337459f332974bb2327a31aaf4b

      - name: Build Docker Image
        run: docker build \
                    --build-arg GOOGLE_CLIENT_ID_API_KEY="${{secrets.GOOGLE_CLIENT_ID_API_KEY}}" \
                    --build-arg GOOGLE_SAFE_BROWSING_API_KEY="${{secrets.GOOGLE_API_SAFETY_KEY}}" \
                    --build-arg GOOGLE_CLIENT_SECRET_API_KEY="${{secrets.GOOGLE_CLIENT_SECRET_API_KEY}}" \
                    --build-arg NINJA_PROFANITY_FILTER_API_KEY="${{secrets.NINJA_PROFANITY_FILTER_API_KEY}}" \
                    --build-arg KAFKA_BROKER_IP="kafka:9092" \
                    -t app:latest .
      
      - name: Install Docker
        run: |
          curl -fsSL https://get.docker.com -o get-docker.sh
          sudo sh get-docker.sh
          sudo usermod -aG docker $USER
        
      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      #- name: Set up Docker Buildx
      #  uses: docker/setup-buildx-action@v3
        
      - name: Set up Kafka Docker Compose 
        run: docker-compose -f docker-compose.yml up -d
      
      # Build
      - name: Sanitize kafka I
        run: ./gradlew build --no-daemon || true
        env:
          NINJA_PROFANITY_FILTER_API_KEY: ${{ secrets.NINJA_PROFANITY_FILTER_API_KEY }}
          GOOGLE_SAFE_BROWSING_API_KEY: ${{ secrets.GOOGLE_API_SAFETY_KEY }}

      - name: Sanitize kafka II
        run: ./gradlew build --no-daemon || true
        env:
          NINJA_PROFANITY_FILTER_API_KEY: ${{ secrets.NINJA_PROFANITY_FILTER_API_KEY }}
          GOOGLE_SAFE_BROWSING_API_KEY: ${{ secrets.GOOGLE_API_SAFETY_KEY }}
          KAFKA_BROKER_IP: localhost:9092

      - name: Build with Gradle
        run: ./gradlew build --no-daemon
        env:
          GOOGLE_SAFE_BROWSING_API_KEY: ${{ secrets.GOOGLE_API_SAFETY_KEY }}
          GOOGLE_CLIENT_ID_API_KEY: ${{ secrets.GOOGLE_CLIENT_ID_API_KEY }}
          GOOGLE_CLIENT_SECRET_API_KEY: ${{ secrets.GOOGLE_CLIENT_SECRET_API_KEY }}
          NINJA_PROFANITY_FILTER_API_KEY: ${{ secrets.NINJA_PROFANITY_FILTER_API_KEY }}
          KAFKA_BROKER_IP: localhost:9092
      
      # Test
      - name: Test with Gradle
        run: ./gradlew check --no-daemon
        env:
          GOOGLE_SAFE_BROWSING_API_KEY: ${{ secrets.GOOGLE_API_SAFETY_KEY }}
          GOOGLE_CLIENT_ID_API_KEY: ${{ secrets.GOOGLE_CLIENT_ID_API_KEY }}
          GOOGLE_CLIENT_SECRET_API_KEY: ${{ secrets.GOOGLE_CLIENT_SECRET_API_KEY }}
          NINJA_PROFANITY_FILTER_API_KEY: ${{ secrets.NINJA_PROFANITY_FILTER_API_KEY }}
          KAFKA_BROKER_IP: localhost:9092

      - name: Cleanup Gradle Cache GOOGLE_API_SAFETY_KEY
        run: |
          rm -f ~/.gradle/caches/modules-2/modules-2.lock
          rm -f ~/.gradle/caches/modules-2/gc.properties

      - name: Upload repository as artifact
        uses: actions/upload-artifact@v3
        with:
            name: repo-artifact
            path: .
            retention-days: 1
  
  deploy:
    runs-on: ubuntu-latest
    needs: build-test
    steps:

      - name: Download repository artifact
        uses: actions/download-artifact@v3
        with:
          name: repo-artifact
          path: .

      - name: Copy jar file
        run: |
          ls -lh .
          cp ./app/build/libs/app-0.2024.1-SNAPSHOT.jar .
          ls -lh .

      - name: Change permissions
        run: |
          chmod +x app-0.2024.1-SNAPSHOT.jar
          ls -lh app-0.2024.1-SNAPSHOT.jar
      
      #- name: Set up Docker Buildx
      #  uses: docker/setup-buildx-action@v3

      #- name: Build and Push Docker Image
      #  uses: docker/build-push-action@v5
      #  with:
      #      context: .
      #      tags: app:latest
      #      push: false
      #      build-args: |
      #        GOOGLE_CLIENT_ID_API_KEY=${{ secrets.GOOGLE_CLIENT_ID_API_KEY }}
      #        GOOGLE_SAFE_BROWSING_API_KEY=${{ secrets.GOOGLE_API_SAFETY_KEY }}
      #        GOOGLE_CLIENT_SECRET_API_KEY=${{ secrets.GOOGLE_CLIENT_SECRET_API_KEY }}
      #        NINJA_PROFANITY_FILTER_API_KEY=${{ secrets.NINJA_PROFANITY_FILTER_API_KEY }}
      #       KAFKA_BROKER_IP=kafka:9092

      - name: Build Docker Image
        run: docker build \
                    --build-arg GOOGLE_CLIENT_ID_API_KEY="${{secrets.GOOGLE_CLIENT_ID_API_KEY}}" \
                    --build-arg GOOGLE_SAFE_BROWSING_API_KEY="${{secrets.GOOGLE_API_SAFETY_KEY}}" \
                    --build-arg GOOGLE_CLIENT_SECRET_API_KEY="${{secrets.GOOGLE_CLIENT_SECRET_API_KEY}}" \
                    --build-arg NINJA_PROFANITY_FILTER_API_KEY="${{secrets.NINJA_PROFANITY_FILTER_API_KEY}}" \
                    --build-arg KAFKA_BROKER_IP="kafka:9092" \
                    -t app:latest .
      
      - name: Check Docker Image
        run: docker images 
      
      - name: Export docker image
        run: |
          docker save app:latest > app.tar
          ls -lh app.tar

      - name: Upload docker
        uses: actions/upload-artifact@v3
        with:
          path: .
          name: app.tar

      - name: Copy docker-compose-deploy.yml to Azure VM
        run: |
          scp -i ${{secrets.AZURE_SSH_KEY}} docker-compose-deploy.yml  ${{secrets.AZURE_USERNAME}}@${{secrets.AZURE_HOST}}:/home/${{secrets.AZURE_USERNAME}}

      - name: Copy app.jar to Azure VM
        run: |
          scp -i ${{secrets.AZURE_SSH_KEY}} app.tar ${{secrets.AZURE_USERNAME}}@${{secrets.AZURE_HOST}}:/home/${{secrets.AZURE_USERNAME}}

      - name: Load docker image
        run: |
          ssh -i ${{secrets.AZURE_SSH_KEY}} ${{secrets.AZURE_USERNAME}}@${{secrets.AZURE_HOST}} "docker load < /home/${{secrets.AZURE_USERNAME}}/app.tar"

      - name: Stop docker-compose-deploy.yml
        run: |
          ssh -i ${{secrets.AZURE_SSH_KEY}} ${{secrets.AZURE_USERNAME}}@${{secrets.AZURE_HOST}} "docker compose -f /home/${{secrets.AZURE_USERNAME}}/docker-compose-deploy.yml down"

      - name: Run docker-compose-deploy.yml
        run: |
          ssh -i ${{secrets.AZURE_SSH_KEY}} ${{secrets.AZURE_USERNAME}}@${{secrets.AZURE_HOST}} "docker compose -f /home/${{secrets.AZURE_USERNAME}}/docker-compose-deploy.yml up -d"


      




  
  
    